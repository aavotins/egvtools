% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tile_vector_grid.R
\name{tile_vector_grid}
\alias{tile_vector_grid}
\title{Tile a vector grid into parquet tiles}
\source{
Zenodo (grid example): https://zenodo.org/records/14277114
}
\usage{
tile_vector_grid(
  grid_path = "./Templates/TemplateGrids/tikls100_sauzeme.parquet",
  out_dir = "./Templates/TemplateGrids/lapas",
  tile_field = "lapa",
  chunk_size = 50000L,
  overwrite = FALSE,
  quiet = FALSE
)
}
\arguments{
\item{grid_path}{Character. Path to the source grid parquet
(default \code{"./Templates/TemplateGrids/tikls100_sauzeme.parquet"}).}

\item{out_dir}{Character. Where to write tiles (default
\code{"./Templates/TemplateGrids/lapas"}).}

\item{tile_field}{Character or \code{NULL}. If provided and exists in data (e.g., \code{"lapa"}),
tiles are split by unique values of this field. If \code{NULL} or not found, uses \code{chunk_size}.
Default \code{"lapa"}.}

\item{chunk_size}{Integer. Number of rows per tile when \code{tile_field} is \code{NULL} or missing.
Default \code{50000L}.}

\item{overwrite}{Logical. Overwrite existing tile files? Default \code{FALSE}.}

\item{quiet}{Logical. Suppress messages? Default \code{FALSE}.}
}
\value{
Invisibly returns a \code{data.frame} with columns: \code{tile_id}, \code{n_rows}, \code{path}, \code{wrote}.
}
\description{
Reads a grid parquet (e.g., \code{tikls100_sauzeme.parquet}) and writes per-tile parquet
files into \code{out_dir}. Output filenames are formed as:
\strong{\verb{[base]_[tilename].parquet}}, where:
\itemize{
\item \strong{base} = the substring of the input filename before the first underscore
(e.g., \code{"tikls100"} from \code{tikls100_sauzeme.parquet});
\item \strong{tilename} = the value from \code{tile_field} (e.g., \code{2434}), or an auto-generated
chunk id (e.g., \code{tile_00001}) if \code{tile_field} is \code{NULL} or not present.
}

Tiling can be controlled either by an existing \code{tile_field} (preferred) or by
automatic chunking using \code{chunk_size}.
}
\details{
Uses \pkg{sfarrow} for Parquet I/O. CRS and geometry are preserved. Designed for stable,
idempotent outputs, deterministic filenames, and clean skipping of existing tiles.
}
\examples{
\dontrun{
# Split by an existing field (e.g., "lapa")
tile_vector_grid(
  grid_path = "./Templates/TemplateGrids/tikls100_sauzeme.parquet",
  out_dir   = "./Templates/TemplateGrids/lapas",
  tile_field = "lapa"
)

# Fallback to chunking if tile_field is NULL or missing
tile_vector_grid(
  grid_path  = "./Templates/TemplateGrids/tikls100_sauzeme.parquet",
  out_dir    = "./Templates/TemplateGrids/lapas",
  tile_field = NULL,
  chunk_size = 25000
)
}

}
\seealso{
\code{\link[=download_vector_templates]{download_vector_templates()}}, \code{\link[=tiled_buffers]{tiled_buffers()}}
}
