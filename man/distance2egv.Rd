% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance2egv.R
\name{distance2egv}
\alias{distance2egv}
\title{Distance-to-class on the EGV grid}
\usage{
distance2egv(
  input,
  template_egv,
  values_as_one = NULL,
  project_to_template_input = FALSE,
  template_input = NULL,
  use_whitebox = TRUE,
  fill_gaps = FALSE,
  idw_weight = 2,
  filter_size = NULL,
  outlocation = "./Rastri_100m/RAW/",
  outfilename,
  layername,
  check_na = FALSE,
  plot_result = FALSE,
  plot_gaps = FALSE,
  NAflag = NULL,
  gdal_opts = c("COMPRESS=LZW", "TILED=YES", "BIGTIFF=IF_SAFER", "NUM_THREADS=ALL_CPUS",
    "BLOCKXSIZE=256", "BLOCKYSIZE=256"),
  write_datatype = NULL,
  terra_memfrac = 0.7,
  terra_tempdir = tempdir(),
  terra_todisk = FALSE,
  force_gc = FALSE,
  quiet = FALSE
)
}
\arguments{
\item{input}{\code{terra::SpatRaster} or file path. Raster prepared by \code{polygon2input()}.}

\item{template_egv}{\code{terra::SpatRaster} or path. Target EGV template (e.g., 100 m).}

\item{values_as_one}{\code{NULL}, numeric vector, and/or range strings in bracket
notation (see Details). If \code{NULL}, non-\code{NA} cells are sources.}

\item{project_to_template_input}{Logical. If \code{TRUE}, reproject \code{input} to
\code{template_input} \strong{once at the start}. Default \code{FALSE}.}

\item{template_input}{When \code{project_to_template_input=TRUE}, a 10 m template
used to define the target CRS/grid for that initial reprojection.}

\item{use_whitebox}{Logical; use Whitebox for distance (default \code{TRUE}),
otherwise \code{terra::distance()}.}

\item{fill_gaps}{Logical. If \code{TRUE}, fill remaining gaps on the \strong{template grid}
using Whitebox \code{wbt_fill_missing_data()}. Default \code{FALSE}.}

\item{idw_weight}{IDW power for Whitebox fill. Default \code{2}.}

\item{filter_size}{Optional odd integer window for Whitebox. If \code{NULL}, auto:
\code{2 * max_gap_width_cells}, with a \strong{minimum of 3}.}

\item{outlocation}{Output directory. Default \code{"./Rastri_100m/RAW/"}.}

\item{outfilename}{Output filename (e.g., \code{"dist_class_100m.tif"}). \strong{Required}.}

\item{layername}{Output band name. \strong{Required}.}

\item{check_na}{Logical. If \code{TRUE}, report internal NA count on the template footprint. Default \code{FALSE}.}

\item{plot_result}{Logical; plot final result.}

\item{plot_gaps}{Logical; plot gap map (TRUE = gap). If both TRUE, side-by-side.}

\item{NAflag}{Optional NA flag for writing. Default \code{NULL} (omitted for Float32).}

\item{gdal_opts}{GDAL creation options (merged with tuned defaults).
Default \code{c("COMPRESS=LZW","TILED=YES","BIGTIFF=IF_SAFER","NUM_THREADS=ALL_CPUS","BLOCKXSIZE=256","BLOCKYSIZE=256")}.}

\item{write_datatype}{Terra datatype for writing. Default \code{NULL} → \code{"FLT4S"}.}

\item{terra_memfrac}{\code{terraOptions(memfrac=...)}. Default \code{0.7}.}

\item{terra_tempdir}{Temp dir for terra ops. Default \code{tempdir()}.}

\item{terra_todisk}{Logical or \code{NA}. If \code{TRUE}, prefer on-disk for heavy steps. Default \code{FALSE}.}

\item{force_gc}{Logical; call \code{gc()} at checkpoints. Default \code{FALSE}.}

\item{quiet}{Suppress console prints. Default \code{FALSE}.}
}
\value{
Invisibly, a list with:
\itemize{
\item \code{path} (output file),
\item \code{n_sources} (number of source cells on input grid),
\item \code{n_na_final} (internal NA count on template footprint),
\item \code{min_dist}, \code{max_dist},
\item \code{elapsed_sec}.
}
}
\description{
Computes Euclidean distance (in \strong{map units}) from cells matching a set of
class values in an \strong{input raster} to all cells of an \strong{EGV template} grid,
then writes a Float32 GeoTIFF aligned to the template. Designed to work with
rasters produced by \code{polygon2input()}.
}
\details{
\strong{Preparation & CRS:} Prepare inputs with the function \code{polygon2input()} and the
templates from https://zenodo.org/records/14497070 (download via the function
\code{download_raster_templates()}). The function does \strong{not} automatically reproject
to the 100 m template. It only warns if CRSs differ. For rare cases, set
\code{project_to_template_input = TRUE} and provide \code{template_input} (10 m) to reproject
the input once at the start. Distance is computed in the (possibly reprojected)
input’s map units.

\strong{Selecting class values:} \code{values_as_one} accepts any-length vector combining:
\itemize{
\item numeric values (e.g., \code{500}, \code{c(610,620,630)}), and/or
\item range strings in interval notation with inclusive/exclusive bounds:
\code{"[400,600]"}, \code{"(400,600)"}, \code{"[400,600)"}, \code{"(400,600]"}.
Example: \code{c("[600,700)", "500")}. If \code{values_as_one} is \code{NULL}, \strong{non-NA}
cells are considered sources.
}

\strong{Distance engine:} Set \code{use_whitebox = TRUE} (default) to compute the distance with
\code{whitebox::wbt_euclidean_distance()}; otherwise \code{terra::distance()} is used.

\strong{Auto alignment choice:} If input distance grid and the 100 m template are
same-CRS, bounding boxes match, and the template resolution is an \strong{integer multiple}
of the input resolution (e.g., 10 m → 100 m), the function uses
\code{terra::aggregate(..., fun=mean)} (fast), followed by a light
\code{resample(..., "near")} to lock onto the template grid. Otherwise, it falls back
to \code{terra::resample(..., method="mean")}.

\strong{Masking:} A single mask to \code{template_egv} is applied once \strong{after} alignment
and \strong{before} plotting/saving.

\strong{Gap filling:} If \code{fill_gaps = TRUE}, gaps (cells where output is \code{NA} but the
template is not) are filled via \code{whitebox::wbt_fill_missing_data()} with IDW
weight \code{idw_weight}. If \code{filter_size} is \code{NULL}, the function uses
\code{2 * max_gap_width_cells}, with a \strong{minimum of 3} (no max clamp). Whitebox
temporaries are written with \code{COMPRESS=NONE} for speed; the final GeoTIFF uses \code{gdal_opts}.

\strong{Workflow}
\enumerate{
\item Load \code{input} and \code{template_egv}; optionally reproject \code{input} once if
\code{project_to_template_input=TRUE} (using \code{template_input}).
\item Build a \strong{seeds} raster on the input grid: \code{1} where value matches \code{values_as_one}
(or non-\code{NA} if \code{values_as_one=NULL}), \code{NA} elsewhere.
\item Compute \strong{distance} on the input grid via Whitebox (\code{wbt_euclidean_distance}) or
\code{terra::distance()} depending on \code{use_whitebox}.
\item \strong{Align} the distance raster to the template:
\itemize{
\item If perfectly nested (same CRS, matching extent, integer resolution ratio),
do \code{aggregate(mean)} then \code{resample("near")}.
\item Else if same CRS but not nested, \code{resample(method="mean")}.
\item Else, \code{project(..., method="bilinear")}.
}
\item Apply a \strong{single final mask} to \code{template_egv}.
\item Optionally \strong{fill gaps} with Whitebox (if \code{fill_gaps=TRUE}) on the template grid.
\item Optionally \strong{plot} result and/or gap map (side-by-side if both requested).
\item \strong{Write atomically} to GeoTIFF with LZW compression and tuned GDAL options.
\item Restore \code{terraOptions()} and sink state on exit (prevents stuck sinks).
}

Console safety: uses \code{cat()} for progress and snapshots/restores sink state on exit
so your console won’t remain “sunk” after interrupts.

[400,600)"\verb{, }"(400,600]: R:400,600)\%22\%60,\%20\%60\%22(400,600
}
\examples{
\dontrun{
# Distance from classes 1 and [10,20) using Whitebox, with side-by-side plots
distance2egv(
  input         = "./TestejuPakotni_early/Forests_StandAge_bg0_b.tif",
  template_egv  = "./Templates/TemplateRasters/LV100m_10km.tif",
  values_as_one = c(1, "[10,20)"),
  outlocation   = "./Rastri_100m/RAW/",
  outfilename   = "dist_age_100m.tif",
  layername     = "dist_age",
  use_whitebox  = TRUE,
  plot_result   = TRUE,
  plot_gaps     = TRUE,
  terra_todisk  = TRUE
)

# Same with terra::distance() and gap filling
distance2egv(
  input         = "./Masks/roads_mask_10m.tif",
  template_egv  = "./Templates/TemplateRasters/LV100m_10km.tif",
  values_as_one = NULL,  # non-NA are sources
  use_whitebox  = FALSE,
  fill_gaps     = TRUE,
  idw_weight    = 2,
  outlocation   = "./Rastri_100m/RAW/",
  outfilename   = "dist_roads_100m.tif",
  layername     = "dist_roads",
  terra_todisk  = TRUE
)
}

}
\seealso{
\code{\link[=polygon2input]{polygon2input()}} for preparing the input raster,
\code{\link[=input2egv]{input2egv()}} for aggregation/resampling to the EGV grid,
\code{\link[=downscale2egv]{downscale2egv()}}, \code{\link[=landscape_function]{landscape_function()}}, \code{\link[=radius_function]{radius_function()}},
and the template downloaders: \code{\link[=download_raster_templates]{download_raster_templates()}}, \code{\link[=download_vector_templates]{download_vector_templates()}}.
}
